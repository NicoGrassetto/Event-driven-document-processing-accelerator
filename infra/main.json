{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "6629309392963833714"
    }
  },
  "parameters": {
    "contentUnderstandingName": {
      "type": "string",
      "defaultValue": "[format('data-extraction-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Content Extraction service"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for the Content Extraction service"
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "S0",
      "allowedValues": [
        "S0"
      ],
      "metadata": {
        "description": "The pricing tier for the Content Extraction service"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "environment": "test",
        "service": "data-extraction"
      },
      "metadata": {
        "description": "Tags to apply to resources"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('storage{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Storage account name"
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[format('func-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Function app name"
      }
    },
    "cosmosDbAccountName": {
      "type": "string",
      "defaultValue": "[format('cosmos-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Cosmos DB account name"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[parameters('contentUnderstandingName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "AIServices",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "properties": {
        "customSubDomainName": "[parameters('contentUnderstandingName')]",
        "disableLocalAuth": false,
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "defaultAction": "Allow"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": false,
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
      "properties": {
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        },
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', 'pdfs')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[parameters('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0
          }
        ],
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ],
        "disableKeyBasedMetadataWriteAccess": true,
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "enableFreeTier": false
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}', parameters('cosmosDbAccountName'), 'documents')]",
      "properties": {
        "resource": {
          "id": "documents"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), 'documents', 'processed-documents')]",
      "properties": {
        "resource": {
          "id": "processed-documents",
          "partitionKey": {
            "paths": [
              "/documentId"
            ],
            "kind": "Hash"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), 'documents')]"
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('appi-{0}', parameters('functionAppName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-09-01",
      "name": "[format('asp-{0}', parameters('functionAppName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "reserved": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[format('funcstore{0}', uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('asp-{0}', parameters('functionAppName')))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage__accountName",
              "value": "[format('funcstore{0}', uniqueString(resourceGroup().id))]"
            },
            {
              "name": "AzureWebJobsStorage__credential",
              "value": "managedidentity"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING__accountName",
              "value": "[format('funcstore{0}', uniqueString(resourceGroup().id))]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING__credential",
              "value": "managedidentity"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('appi-{0}', parameters('functionAppName'))), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "StorageConnection__accountName",
              "value": "[parameters('storageAccountName')]"
            },
            {
              "name": "StorageConnection__credential",
              "value": "managedidentity"
            },
            {
              "name": "CosmosDBConnection__accountEndpoint",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2023-04-15').documentEndpoint]"
            },
            {
              "name": "CosmosDBConnection__credential",
              "value": "managedidentity"
            },
            {
              "name": "CONTENT_UNDERSTANDING_ENDPOINT",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('contentUnderstandingName')), '2023-05-01').endpoint]"
            },
            {
              "name": "CONTENT_UNDERSTANDING_KEY",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('contentUnderstandingName')), '2023-05-01').key1]"
            }
          ],
          "pythonVersion": "3.10",
          "use32BitWorkerProcess": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('appi-{0}', parameters('functionAppName')))]",
        "[resourceId('Microsoft.Web/serverfarms', format('asp-{0}', parameters('functionAppName')))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('contentUnderstandingName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('funcstore{0}', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), resourceId('Microsoft.Web/sites', parameters('functionAppName')), 'StorageBlobDataContributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-09-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('funcstore{0}', uniqueString(resourceGroup().id)))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', format('funcstore{0}', uniqueString(resourceGroup().id))), resourceId('Microsoft.Web/sites', parameters('functionAppName')), 'StorageBlobDataContributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-09-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('funcstore{0}', uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.DocumentDB/databaseAccounts/{0}', parameters('cosmosDbAccountName'))]",
      "name": "[guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), resourceId('Microsoft.Web/sites', parameters('functionAppName')), 'CosmosDBDataContributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00000000-0000-0000-0000-000000000002')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-09-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ]
    }
  ],
  "outputs": {
    "contentUnderstandingEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('contentUnderstandingName')), '2023-05-01').endpoint]"
    },
    "contentUnderstandingId": {
      "type": "string",
      "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('contentUnderstandingName'))]"
    },
    "contentUnderstandingName": {
      "type": "string",
      "value": "[parameters('contentUnderstandingName')]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2023-04-15').documentEndpoint]"
    },
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    }
  }
}